<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.   
-->

<!-- =========================================================================
     Schema for specifying actions to migrate a Hibernate Mapping file to JPA
	 mapping file.
	=======================================================================
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
            attributeFormDefault="unqualified" 
            elementFormDefault="qualified" 
            version="1.0">
            
	<xsd:annotation>
		<xsd:documentation><![CDATA[
         This XML Schema specifies a set of actions to migrate a Hibernate mapping file
         to a JPA mapping file. The actions are directed to elements and attributes in
         a Hibernate Mapping descriptor, and transforms these elements/attributes by
         renaming, changing their values or even restructuring the tree hierarchy.
         
         The file must be named "META-INF/migration-actions.xsd".
         This schema is referred in a migration rule specification 
         <migration-actions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                          xsi:schemaLocation="http://www.ibm.com/xml/ns/persistence/orm/migration-actions.xsd"
                          version="1.0">
                  ...
         </migration-rules>
         ]]>
		</xsd:documentation>
	</xsd:annotation>

    <xsd:element name="migration-actions">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="actions" type="action-sequence-type" minOccurs="1" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
    </xsd:element>
    
	<xsd:complexType name="action-sequence-type">
		<xsd:choice>
			<xsd:sequence>
				<xsd:element name="replace-node"   minOccurs="0" maxOccurs="1" 
					type="replace-node-type"/>
				<xsd:element name="rename-node"    minOccurs="0" maxOccurs="1" 
					type="rename-node-type"/>
				<xsd:element name="rename-attr"    minOccurs="0" maxOccurs="unbounded" 
					type="rename-attr-type"/>
				<xsd:element name="promote-attr"   minOccurs="0" maxOccurs="unbounded" 
					type="promote-attr-type"/>
				<xsd:element name="rename-child-node"    minOccurs="0" maxOccurs="unbounded" 
					type="rename-child-node-type"/>
				<xsd:element name="ignore-attr"    minOccurs="0" maxOccurs="unbounded" 
					type="ignore-attr-type"/>
				<xsd:element name="ignore-node"    minOccurs="0" maxOccurs="unbounded" 
					type="ignore-node-type"/>
				<xsd:element name="insert-node"    minOccurs="0" maxOccurs="unbounded" 
					type="insert-node-type"/>
				<xsd:element name="split-node"    minOccurs="0" maxOccurs="unbounded" 
					type="split-node-type"/>
			</xsd:sequence>
			
			<xsd:element name="custom-node" minOccurs="1" maxOccurs="1"/>
		</xsd:choice>
			<xsd:attribute name="for" type="xsd:string" use="required"/>
		</xsd:complexType>
	
	<!-- Replace an element with one of its sub-element.                          -->
	<!-- Used for collection container tags such as bag/set  of Hibernate         -->
	<xsd:complexType name="replace-node-type">
		<xsd:attribute name="with" type="xsd:string"  use="required"/>
	</xsd:complexType>
	
	<!-- Ignores an attribute.  -->
	<xsd:complexType name="ignore-attr-type">
		<xsd:attribute name="name" type="xsd:string"  use="required"/>
		<xsd:attribute name="warn" type="xsd:boolean"/>
	</xsd:complexType>
	
	<!-- Ignores a sub-element.  -->
	<xsd:complexType name="ignore-node-type">
		<xsd:attribute name="name" type="xsd:string"  use="required"/>
		<xsd:attribute name="warn" type="xsd:boolean"/>
	</xsd:complexType>

	<!-- Ignore a node. Often the first action in the list of actions  -->
	<xsd:complexType name="rename-node-type">
		<xsd:attribute name="to" type="xsd:string"/>
	</xsd:complexType>
	
	<!-- Renames a attribute. -->
	<xsd:complexType name="rename-attr-type">
		<xsd:sequence>
			<xsd:element name="map-value" minOccurs="0" maxOccurs="unbounded" type="map-value-type"/>
		</xsd:sequence>
		<xsd:attribute name="from" type="xsd:string" use="required"/>
		<xsd:attribute name="to" type="xsd:string"/>
	</xsd:complexType>
	
	<!-- Promotes an attribute as a sub-element. The sub-element may consume some of -->
	<!-- the attributes of the parent node                                           -->
	<xsd:complexType name="promote-attr-type">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="consume-attr" minOccurs="0" maxOccurs="unbounded" type="consume-attr-type"/>
				<xsd:element name="map-value"    minOccurs="0" maxOccurs="unbounded" type="map-value-type"/>
		    </xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="from" type="xsd:string" use="required"/>
		<xsd:attribute name="to"   type="xsd:string"/>
		<xsd:attribute name="as"   type="xsd:string"/>
	</xsd:complexType>
	
	<xsd:complexType name="split-node-type">
		<xsd:attribute name="from" type="xsd:string" use="required"/>
		<xsd:attribute name="to"   type="xsd:string"/>
		<xsd:attribute name="on"   type="xsd:string" use="required"/>
	</xsd:complexType>
	
	<!-- Inserts a 'dummy' sub-element that had no source counterpart. -->
	<xsd:complexType name="insert-node-type">
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	
	<!-- Renames a child node -->
	<xsd:complexType name="rename-child-node-type">
		<xsd:attribute name="from" type="xsd:string" use="required"/>
		<xsd:attribute name="to"   type="xsd:string" use="required"/>
	</xsd:complexType>

	<!-- Maps an attribute value to another  -->
	<xsd:complexType name="map-value-type">
		<xsd:attribute name="from" type="xsd:string" use="required"/>
		<xsd:attribute name="to"   type="xsd:string" use="required"/>
	</xsd:complexType>
	
	<!-- Maps an attribute value to another while transferring it from parent to a child -->
	<xsd:complexType name="consume-attr-type">
		<xsd:sequence>
			<xsd:element name="map-value" minOccurs="0" maxOccurs="unbounded" type="map-value-type"/>
		</xsd:sequence>
		<xsd:attribute name="from" type="xsd:string" use="required"/>
		<xsd:attribute name="to"   type="xsd:string" use="required"/>
	</xsd:complexType>
	
</xsd:schema>
